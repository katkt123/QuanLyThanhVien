/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.XuLyViPham;

import BLL.ThanhVienBLL;
import BLL.ThongTinSuDungBLL;
import BLL.XuLyViPhamBLL;
import DTO.ThanhVienDTO;
import DTO.ThietBiDTO;
import DTO.ThongTinSuDungDTO;
import GUI.MainGUI;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author loc01
 */
public class AddHinhThucXuLyGUI extends javax.swing.JFrame {

    /**
     * Creates new form AddHinhThucXuLy
     */
    ThanhVienBLL tvBLL = new ThanhVienBLL();
    ThongTinSuDungBLL ttBLL= new ThongTinSuDungBLL();
    XuLyViPhamBLL xlvpBLL= new XuLyViPhamBLL();
    ArrayList<ThanhVienDTO> arrThanhVien = new ArrayList<ThanhVienDTO>();
//    ArrayList<ThietBiDTO> arrThietBi = new ArrayList<ThietBiDTO>();
    ArrayList<ThongTinSuDungDTO> arrThongTin = new ArrayList<ThongTinSuDungDTO>();
    
    DefaultTableModel modelTV = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // không cho phép chỉnh sửa giá trị các ô trong bảng
        }
    };
    
    public AddHinhThucXuLyGUI() {
        initComponents();
        
        setLocationRelativeTo(null);
        setDefaultCloseOperation(MainGUI.DISPOSE_ON_CLOSE);
        jTable_ThanhVien.setModel(modelTV);
        
        modelTV.addColumn("Mã Thành Viên");
        modelTV.addColumn("Họ Tên");
        modelTV.addColumn("Khoa");
        modelTV.addColumn("Ngành");
        modelTV.addColumn("Số Điện Thoại");
        
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setFont(new Font("Arial", Font.BOLD, 20)); // Set bold font
        headerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER); // Set center alignment
        
        for (int i = 0; i < jTable_ThanhVien.getColumnCount(); i++) {
            jTable_ThanhVien.getTableHeader().getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        cellRenderer.setHorizontalAlignment(SwingConstants.CENTER); // Set center alignment
        
        for (int i = 0; i < jTable_ThanhVien.getColumnCount(); i++) {
            jTable_ThanhVien.getColumnModel().getColumn(i).setCellRenderer(cellRenderer);
        }
        
//        loadDataToTable();
        loadThanhVien();
        setIconAdd();
        setIconSearch();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        public void setIconAdd(){
            String imagePath = "src\\main\\java\\Image\\Add.png"; // 
            ImageIcon icon = new ImageIcon(new ImageIcon(imagePath).getImage().getScaledInstance(20, 20, Image.SCALE_SMOOTH));
            jButton_Add.setIcon(icon);
        }
                
        public void setIconSearch(){
            String imagePath = "src\\main\\java\\Image\\Search.png"; // 
            ImageIcon icon = new ImageIcon(new ImageIcon(imagePath).getImage().getScaledInstance(20, 20, Image.SCALE_SMOOTH));
            jLabel1.setIcon(icon);
        }
        
    
//    private int layMaThongTinDuocChon() {
//        int rowIndex = jTable_ThanhVien.getSelectedRow();
//        if (rowIndex != -1) { // Kiểm tra xem có hàng nào được chọn không
//            // Lấy giá trị ở cột đầu tiên (cột chứa mã thành viên) của hàng được chọn
//            return (int) jTable_ThanhVien.getValueAt(rowIndex, 0);
//        } else {
//            // Nếu không có hàng nào được chọn, trả về giá trị mặc định (ví dụ: -1)
//            return -1;
//        }
//    }
    private int layMaThanhVienDuocChon() {
        int rowIndex = jTable_ThanhVien.getSelectedRow();
        if (rowIndex != -1) { // Kiểm tra xem có hàng nào được chọn không
            // Lấy giá trị ở cột đầu tiên (cột chứa mã thành viên) của hàng được chọn
            return (int) jTable_ThanhVien.getValueAt(rowIndex, 0);
        } else {
            // Nếu không có hàng nào được chọn, trả về giá trị mặc định (ví dụ: -1)
            return -1;
        }
    }
    
    public void loadThanhVien() {
//        arrThongTin = xlvpBLL.listQuaHan();
//        for (int i = modelTV.getRowCount() - 1; i >= 0; i--) {
//            modelTV.removeRow(i);
//        }
//        Date currentTime = new Date();
//        for (int i = 0; i < arrThongTin.size(); i++) {
//            ThongTinSuDungDTO em = arrThongTin.get(i);
//            int id = em.getMaTT();
//            ThanhVienDTO idtv = em.getMaTV();
//            ThietBiDTO idtb = em.getMaTB();
//            Date tgmuon = em.getTGMuon();
//            Date tgtra = em.getTGTra();
//
//            // Kiểm tra nếu idtb không null và thời gian trả > thời gian hiện tại thì mới thêm dòng vào bảng
//            if (idtb != null && tgtra.before(currentTime)) {
//                Object[] row = {id, idtv.getMaTV(), idtb.getMaTB(), tgmuon, tgtra};
//                modelTV.addRow(row);
//            }
//        }
                arrThanhVien = tvBLL.listThanhVien();
//        int a = arrNCC.size();
        for(int i = modelTV.getRowCount()-1;i>=0;i--)
            modelTV.removeRow(i);
        for(int i = 0; i<arrThanhVien.size();i++){
            ThanhVienDTO em= arrThanhVien.get(i);
            
            int id= em.getMaTV();
            String name = em.getHoTen();
            String khoa = em.getKhoa();
            String nganh = em.getNganh();
            String sdt = em.getSDT();
            
        
            Object[] row = {id,name,khoa,nganh,sdt};
            modelTV.addRow(row);
        }
    }
    
//    private int demSoLanXuatHienMaThanhVien(int maThanhVien) {
//        int count = 0;
//        for (int i = 0; i < modelTV.getRowCount(); i++) {
//            if ((int) modelTV.getValueAt(i, 1) == maThanhVien) {
//                count++;
//            }
//        }
//        return count;
//    }



//    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {
//
//    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ThanhVien = new javax.swing.JTable();
        jTextField_Search = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton_Add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("DANH SÁCH THÀNH VIÊN");

        jTable_ThanhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_ThanhVien);

        jTextField_Search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_SearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_SearchFocusLost(evt);
            }
        });
        jTextField_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_SearchKeyReleased(evt);
            }
        });

        jLabel1.setMaximumSize(new java.awt.Dimension(32, 32));
        jLabel1.setMinimumSize(new java.awt.Dimension(24, 24));
        jLabel1.setPreferredSize(new java.awt.Dimension(32, 32));

        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(jButton_Add, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton_Add, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_Search, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_SearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_SearchFocusGained
         //TODO add your handling code here:
        if (jTextField_Search.getText().equals("Nhập thông tin tìm kiếm : .....")) {
            jTextField_Search.setText("");
            jTextField_Search.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_SearchFocusGained

    private void jTextField_SearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_SearchFocusLost
        //        // TODO add your handling code here:
        if (jTextField_Search.getText().isEmpty()) {
            jTextField_Search.setText("Nhập thông tin tìm kiếm : .....");
            jTextField_Search.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jTextField_SearchFocusLost

    private void jTextField_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_SearchKeyReleased
        // TODO add your handling code here:
        String searchText = jTextField_Search.getText().trim();

        // Gọi hàm search với nội dung tìm kiếm
        ArrayList<ThanhVienDTO> searchResult = tvBLL.search(searchText);

        for(int i = modelTV.getRowCount()-1;i>=0;i--)
        modelTV.removeRow(i);
        for(int i = 0; i<searchResult.size();i++){
            ThanhVienDTO em= searchResult.get(i);
            int id= em.getMaTV();
            String name= em.getHoTen();
            String khoa = em.getKhoa();
            String nganh = em.getNganh();
            String sdt = em.getSDT();

            Object[] row = {id,name,khoa,nganh,sdt};
            modelTV.addRow(row);
        }
    }//GEN-LAST:event_jTextField_SearchKeyReleased

    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddActionPerformed
//        int maThongTin = layMaThongTinDuocChon();
        int maThanhVien = layMaThanhVienDuocChon();
        if (maThanhVien != -1) {
            XuLyGUI xl = new XuLyGUI();
            xl.setMaThanhVien(maThanhVien);
//            xl.setSoLanXuatHien(demSoLanXuatHienMaThanhVien(maThanhVien));
            xl.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để sửa đổi.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_AddActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddHinhThucXuLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddHinhThucXuLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddHinhThucXuLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddHinhThucXuLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddHinhThucXuLy().setVisible(true);
//            }
//        });
//    }
//    private void loadDataToTable() {
//        ArrayList<ThongTinSuDungDTO> list = xlvpBLL.listQuaHan();
//
//        DefaultTableModel model = (DefaultTableModel) jTable_ThanhVien.getModel();
//        model.setRowCount(0);
//
//        for (ThongTinSuDungDTO tt : list) {
//            model.addRow(new Object[] {
//                tt.getMaTT(),
//                tt.getMaTV(),
//                tt.getMaTB(),
//                tt.getTGVao(),
//                tt.getTGMuon(),
//                tt.getTGTra()
//            });
//        }
//    }

    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_ThanhVien;
    private javax.swing.JTextField jTextField_Search;
    // End of variables declaration//GEN-END:variables
}
